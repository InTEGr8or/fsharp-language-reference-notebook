#!markdown

[SOURCE: Language_Reference_F#](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/members/)

# Members

 +1 

This section describes members of F# object types.

## Remarks

*Members* are features that are part of a type definition and are declared with the `member` keyword. F# object types such as records, classes, discriminated unions, interfaces, and structures support members. For more information, see [Records](../records), [Classes](../classes), [Discriminated Unions](../discriminated-unions), [Interfaces](../interfaces), and [Structures](../structures).

Members typically make up the public interface for a type, which is why they are public unless otherwise specified. Members can also be declared private or internal. For more information, see [Access Control](../access-control). Signatures for types can also be used to expose or not expose certain members of a type. For more information, see [Signatures](../signature-files).

Private fields and `do` bindings, which are used only with classes, are not true members, because they are never part of the public interface of a type and are not declared with the `member` keyword, but they are described in this section also.

## Related Topics

<caption class="visually-hidden">Related Topics</caption>

| Topic | Description |
| --- | --- |
| [`let` Bindings in Classes](let-bindings-in-classes) | Describes the definition of private fields and functions in classes. |
| [`do` Bindings in Classes](do-bindings-in-classes) | Describes the specification of object initialization code. |
| [Properties](properties) | Describes property members in classes and other types. |
| [Indexed Properties](indexed-properties) | Describes array-like properties in classes and other types. |
| [Methods](methods) | Describes functions that are members of a type. |
| [Constructors](constructors) | Describes special functions that initialize objects of a type. |
| [Operator Overloading](../operator-overloading) | Describes the definition of customized operators for types. |
| [Events](events) | Describes the definition of events and event handling support in F#. |
| [Explicit Fields: The `val` Keyword](explicit-fields-the-val-keyword) | Describes the definition of uninitialized fields in a type. |

