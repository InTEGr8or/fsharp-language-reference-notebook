#!markdown

[SOURCE: Language_Reference_F#](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/exception-handling/the-invalidarg-function)

# Exceptions: The invalidArg Function

 +2 

The `invalidArg` function generates an argument exception.

## Syntax



#!fsharp

invalidArg parameter-name error-message-string

#!markdown

## Remarks

The parameter-name in the previous syntax is a string with the name of the parameter whose argument was invalid. The *error-message-string* is a literal string or a value of type `string`. It becomes the `Message` property of the exception object.

The exception generated by `invalidArg` is a `System.ArgumentException` exception. The following code illustrates the use of `invalidArg` to throw an exception.



#!fsharp

let months = [| "January"; "February"; "March"; "April";
                "May"; "June"; "July"; "August"; "September";
                "October"; "November"; "December" |]

let lookupMonth month =
   if (month > 12 || month < 1)
     then invalidArg "month" (sprintf "Value passed in was %d." month)
   months.[month - 1]

printfn "%s" (lookupMonth 12)
printfn "%s" (lookupMonth 1)
printfn "%s" (lookupMonth 13)

#!markdown

The output is the following, followed by a stack trace (not shown).



#!fsharp

December
January
System.ArgumentException: Month parameter out of range.

#!markdown

## See also

